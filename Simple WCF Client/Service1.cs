//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SImple_Wcf_Example
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/SImple_Wcf_Example")]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string FirstField;
        
        private string LastField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string First
        {
            get
            {
                return this.FirstField;
            }
            set
            {
                this.FirstField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Last
        {
            get
            {
                return this.LastField;
            }
            set
            {
                this.LastField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ICalculationService")]
public interface ICalculationService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/Sum", ReplyAction="http://tempuri.org/ICalculationService/SumResponse")]
    int Sum(int x, int y);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/Sum", ReplyAction="http://tempuri.org/ICalculationService/SumResponse")]
    System.Threading.Tasks.Task<int> SumAsync(int x, int y);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/Diff", ReplyAction="http://tempuri.org/ICalculationService/DiffResponse")]
    int Diff(int x, int y);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/Diff", ReplyAction="http://tempuri.org/ICalculationService/DiffResponse")]
    System.Threading.Tasks.Task<int> DiffAsync(int x, int y);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/Mult", ReplyAction="http://tempuri.org/ICalculationService/MultResponse")]
    int Mult(int x, int y);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/Mult", ReplyAction="http://tempuri.org/ICalculationService/MultResponse")]
    System.Threading.Tasks.Task<int> MultAsync(int x, int y);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/FullName", ReplyAction="http://tempuri.org/ICalculationService/FullNameResponse")]
    string FullName(SImple_Wcf_Example.Person person);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/FullName", ReplyAction="http://tempuri.org/ICalculationService/FullNameResponse")]
    System.Threading.Tasks.Task<string> FullNameAsync(SImple_Wcf_Example.Person person);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/Count", ReplyAction="http://tempuri.org/ICalculationService/CountResponse")]
    int Count();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/Count", ReplyAction="http://tempuri.org/ICalculationService/CountResponse")]
    System.Threading.Tasks.Task<int> CountAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ICalculationServiceChannel : ICalculationService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CalculationServiceClient : System.ServiceModel.ClientBase<ICalculationService>, ICalculationService
{
    
    public CalculationServiceClient()
    {
    }
    
    public CalculationServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public CalculationServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public CalculationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public CalculationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public int Sum(int x, int y)
    {
        return base.Channel.Sum(x, y);
    }
    
    public System.Threading.Tasks.Task<int> SumAsync(int x, int y)
    {
        return base.Channel.SumAsync(x, y);
    }
    
    public int Diff(int x, int y)
    {
        return base.Channel.Diff(x, y);
    }
    
    public System.Threading.Tasks.Task<int> DiffAsync(int x, int y)
    {
        return base.Channel.DiffAsync(x, y);
    }
    
    public int Mult(int x, int y)
    {
        return base.Channel.Mult(x, y);
    }
    
    public System.Threading.Tasks.Task<int> MultAsync(int x, int y)
    {
        return base.Channel.MultAsync(x, y);
    }
    
    public string FullName(SImple_Wcf_Example.Person person)
    {
        return base.Channel.FullName(person);
    }
    
    public System.Threading.Tasks.Task<string> FullNameAsync(SImple_Wcf_Example.Person person)
    {
        return base.Channel.FullNameAsync(person);
    }
    
    public int Count()
    {
        return base.Channel.Count();
    }
    
    public System.Threading.Tasks.Task<int> CountAsync()
    {
        return base.Channel.CountAsync();
    }
}
